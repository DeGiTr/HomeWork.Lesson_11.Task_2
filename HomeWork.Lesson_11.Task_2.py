"""
Задание №2

В Урок №10. Задание №1 вы создавали словарь с информацией о питомце. Теперь нам нужна "настоящая" база данных для ветеринарной клиники.

"""
import collections

pets = {} # Создаем пустой словарь для питомцев

def create(): # Данная функция будет создавать новую запись с информацией о питомце и добавлять эту информацию в наш словарь pets
    last = collections.deque(pets, maxlen=1)[0]
    pet_name = input("Введите кличку питомца: ")
    pet_type = input("Введите вид питомца: ")
    pet_age = int(input("Введите возраст питомца: "))
    host_name = input("Введите имя владельца: ")
    pets = {
         last :{
             pet_name :{
                "Вид питомца": pet_type, 
                "Возраст питомца": pet_age, 
                "Имя владельца": host_name
            } # Добавляем в словарь pets ключ pet_name в котором содержатся ключи и значения по введеному питомцу
        }
    }

def read(): # Данная функция будет отображать информацию о запрашиваемом питомце в виде: Это желторотый питон по кличке "Каа". Возраст питомца: 19 лет. Имя владельца: Саша
    for name in pets.keys():
        pet = pets[name]
    
        print(f'Это {pet["Вид питомца"]} по кличке "{name}". Возраст питомца: {pet["Возраст питомца"]} {age}. Имя владельца: {pet["Имя владельца"]}')


#def update(): # Данная функция будет обновлять информацию об указанном питомце

#def delete(): # Данная функция будет удалять запись о существующем питомце

# def get_pet(ID)

def get_suffix(age):
    age = () # Создаем пустую переменную для правильного окончания возраста
    if 11 <= age % 100 <= 14:
        return "лет"
    elif age % 10 == 1:
        return "год"
    elif 2 <= pet_age % 10 <= 4:
        return "года"
    else:
        return "лет"

# def pets_list():


while command != 'stop':
    command = input()
